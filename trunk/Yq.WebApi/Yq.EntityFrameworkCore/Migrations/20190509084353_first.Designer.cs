// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yq.EntityFrameworkCore;

namespace Yq.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(WdDbContext))]
    [Migration("20190509084353_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("DepartmentName");

                    b.Property<int>("IsAvailable");

                    b.Property<int>("IsDel");

                    b.Property<string>("OrgLevel");

                    b.Property<string>("OrgParentName");

                    b.Property<string>("OrgParentPath");

                    b.Property<Guid>("ParentId");

                    b.Property<string>("Remarks");

                    b.Property<int>("SortNo");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<Guid>("UpdateUserId");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<int>("IsAvailable");

                    b.Property<int>("IsDel");

                    b.Property<string>("MenuName");

                    b.Property<Guid>("ParentId");

                    b.Property<string>("Remarks");

                    b.Property<int>("SortNo");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<Guid>("UpdateUserId");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<int>("IsAvailable");

                    b.Property<int>("IsDel");

                    b.Property<string>("Remarks");

                    b.Property<string>("RoleName");

                    b.Property<int>("SortNo");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<Guid>("UpdateUserId");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.RoleMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<Guid>("MenuId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenus");
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("Email");

                    b.Property<string>("Employee");

                    b.Property<DateTime?>("FirstTime");

                    b.Property<string>("FullName");

                    b.Property<string>("IP");

                    b.Property<int>("IsAvailable");

                    b.Property<int>("IsDel");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("OtherName");

                    b.Property<string>("Password");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<Guid>("UpdateUserId");

                    b.Property<int>("age");

                    b.Property<int>("sex");

                    b.Property<string>("token");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.RoleMenu", b =>
                {
                    b.HasOne("Yq.EntityFrameworkCore.Models.Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.User", b =>
                {
                    b.HasOne("Yq.EntityFrameworkCore.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Yq.EntityFrameworkCore.Models.UserRole", b =>
                {
                    b.HasOne("Yq.EntityFrameworkCore.Models.User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
